@model PetClinic.Web.InputModels.CreatePetForm

@using (Html.BeginForm((string)ViewBag.FormMode, "Pets", FormMethod.Post, new { @class = "form-horizontal", @id = "create-pet-form" }))
{
    @Html.AntiForgeryToken()

    <h2 class="main-heading text-center">
        @ViewBag.Title <br />
    </h2>
    <hr />
    <div class="row">
        <div class="col-sm-6">
            <h2>Primary Information:</h2>
            <p style="color:red;">@Html.ValidationMessage("ServerError")</p>
            <div class="form-group">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.Name)
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Eg: Goshko" } })
                </div>
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.SelectedOwnerId, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.SelectedOwnerId)
                    @Html.DropDownListFor(model => model.SelectedOwnerId, Model.Owners, " -- Choose Owner --", new { @id = "owners-dropdown", @class = "form-control" })
                </div>
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.SelectedTypeId, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.SelectedTypeId)
                    @if (ViewBag.FormMode == "Create")
                    {
                        @Html.DropDownListFor(model => model.SelectedTypeId, Model.Types, " -- Choose Pet Type --", new { @id = "types-dropdown", @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.SelectedTypeId, Model.Types, " -- Choose Pet Type --", new { @id = "types-dropdown", @class = "form-control", @disabled = "disabled" })
                    }
                </div>
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.Breed, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.Breed)
                    @Html.EditorFor(model => model.Breed, new { htmlAttributes = new { @class = "form-control", placeholder = "Eg: Persian Cat" } })
                </div>
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.Age, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.Age)
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                </div>
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.SelectedGenderId, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.SelectedGenderId)
                    @Html.DropDownListFor(model => model.SelectedGenderId, Model.Genders, " -- Choose Gender --", new { @id = "gender-dropdown", @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-warning">
                        @ViewBag.FormModeText
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h2>Additional Information:</h2>
            <p class="additional-information-hint">
                Please select pet type to reveal additional information about that type.
            </p>
            <div class="form-group additional-information-group">
                <div class="col-sm-12 additional-input ai-numberofhoursspentsleeping">
                    @Html.LabelFor(model => model.NumberOfHoursSpentSleeping, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.NumberOfHoursSpentSleeping)
                    @Html.EditorFor(model => model.NumberOfHoursSpentSleeping, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                </div>
                <div class="col-sm-12 additional-input ai-favouritefood">
                    @Html.LabelFor(model => model.FavouriteFood, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.FavouriteFood)
                    @Html.EditorFor(model => model.FavouriteFood, new { htmlAttributes = new { @class = "form-control", placeholder = "Eg: Fish" } })
                </div>
                <div class="col-sm-12 additional-input ai-favouritegame">
                    @Html.LabelFor(model => model.FavouriteGame, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.FavouriteGame)
                    @Html.EditorFor(model => model.FavouriteGame, new { htmlAttributes = new { @class = "form-control", placeholder = "Eg: Catch the Ball" } })
                </div>
                <div class="col-sm-12 additional-input ai-isagressive">
                    @Html.LabelFor(model => model.IsAgressive, new { @class = "control-label" })<br />
                    @Html.CheckBoxFor(model => model.IsAgressive)
                </div>
                <div class="col-sm-12 additional-input ai-partner">
                    @Html.LabelFor(model => model.SelectedPartnerId, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.SelectedPartnerId)
                    @Html.DropDownListFor(model => model.SelectedPartnerId, Model.Partners, " -- Choose Partner --", new { @id = "pets-dropdown", @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
<script type="text/javascript">
    // Disabled hack
    jQuery(function ($) {
        $('form').bind('submit', function () {
            $(this).find(':input').removeAttr('disabled');
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.additional-input').hide();
        $('#types-dropdown').change(function () {
            var selectionValue = this.value;
            switch (selectionValue) {
                case "1":
                    console.log("Cat type is selected");
                    $('.additional-input').hide();
                    $('.additional-input.ai-numberofhoursspentsleeping').show();
                    $('.additional-input.ai-favouritefood').show();
                    break;
                case "2":
                    console.log("Dog type is selected");
                    $('.additional-input').hide();
                    $('.additional-input.ai-favouritefood').show();
                    $('.additional-input.ai-favouritegame').show();
                    $('.additional-input.ai-isagressive').show();
                    break;
                case "3":
                    console.log("Bird type is selected");
                    $('.additional-input').hide();
                    $('.additional-input.ai-partner').show();
                    break;
                default:

            }
        });

        @switch (Model.SelectedTypeId)
        {
            case 1:
                    @:$('.additional-input.ai-numberofhoursspentsleeping').show();
                    @:$('.additional-input.ai-favouritefood').show();
                break;
            case 2:
                    @:$('.additional-input.ai-favouritefood').show();
                    @:$('.additional-input.ai-favouritegame').show();
                    @:$('.additional-input.ai-isagressive').show();
                break;
            case 3:
                    @:$('.additional-input.ai-partner').show();
                break;
            default:
                break;
        }
    });
</script>
}